@import url("https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@400;700&display=swap");

:root {
    --background-start: #0a0a0a;
    --background-end: #1a1a1a;
    --primary-color: #00ccff;
    --text-color: #ffffff;
    --muted-foreground: #a0a0a0;
    --card-background: rgba(26, 26, 26, 0.7);
    --border-color: rgba(255, 255, 255, 0.1);
    --shadow-color: rgba(0, 0, 0, 0.3);
    --neon-border-color: rgba(0, 204, 255, 0.5);
    --neon-shadow-color: rgba(0, 204, 255, 0.3);
}

body {
    margin: 0;
    font-family: 'Space Grotesk', sans-serif;
    color: var(--text-color);
    background-color: var(--background-start);
}

.min-h-screen {
    min-height: 100vh;
}

.gradient-bg {
    background: linear-gradient(135deg, var(--background-start) 0%, var(--background-end) 100%);
}

.font-space-grotesk {
    font-family: 'Space Grotesk', sans-serif;
}

.text-white {
    color: var(--text-color);
}

.particle-bg {
    position: relative;
    overflow: hidden;
}

.particle-bg::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image:
        radial-gradient(circle at 20% 80%, rgba(0, 204, 255, 0.1) 0%, transparent 50%),
        radial-gradient(circle at 80% 20%, rgba(0, 204, 255, 0.1) 0%, transparent 50%),
        radial-gradient(circle at 40% 40%, rgba(0, 204, 255, 0.05) 0%, transparent 50%);
    pointer-events: none;
}

.container {
    max-width: 1200px;
    margin-left: auto;
    margin-right: auto;
}

.mx-auto {
    margin-left: auto;
    margin-right: auto;
}

.px-4 {
    padding-left: 1rem;
    padding-right: 1rem;
}

.py-8 {
    padding-top: 2rem;
    padding-bottom: 2rem;
}

.relative {
    position: relative;
}

.z-10 {
    z-index: 10;
}

.text-center {
    text-align: center;
}

.mb-8 {
    margin-bottom: 2rem;
}

.animate-slide-up {
    animation: slide-up 0.3s ease-out;
}

@keyframes slide-up {
    from {
        opacity: 0;
        transform: translateY(20px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.text-5xl {
    font-size: 3rem;
}

.font-bold {
    font-weight: 700;
}

.gradient-text {
    background: linear-gradient(135deg, #00ccff 0%, #0099cc 50%, #006699 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
}

.mb-2 {
    margin-bottom: 0.5rem;
}

.floating {
    animation: floating 3s ease-in-out infinite;
}

@keyframes floating {

    0%,
    100% {
        transform: translateY(0px);
    }

    50% {
        transform: translateY(-10px);
    }
}

.text-muted-foreground {
    color: var(--muted-foreground);
}

.text-lg {
    font-size: 1.125rem;
}

.animate-pulse-slow {
    animation: pulse-slow 3s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@keyframes pulse-slow {

    0%,
    100% {
        opacity: 1;
    }

    50% {
        opacity: 0.7;
    }
}

.grid {
    display: grid;
}

.grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
}

.md\:grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
}

.gap-4 {
    gap: 1rem;
}

.card {
    border-radius: 0.5rem;
    overflow: hidden;
}

.glass-morphism {
    background: var(--card-background);
    backdrop-filter: blur(20px);
    border: 1px solid var(--border-color);
    box-shadow:
        0 8px 32px var(--shadow-color),
        inset 0 1px 0 rgba(255, 255, 255, 0.1);
}

.hover\:neon-border:hover {
    border: 1px solid var(--neon-border-color);
    box-shadow:
        0 0 10px var(--neon-shadow-color),
        inset 0 0 10px rgba(0, 204, 255, 0.1);
}

.transition-all {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
}

.duration-300 {
    transition-duration: 300ms;
}

.animate-bounce-in {
    animation: bounce-in 0.5s ease-out;
}

@keyframes bounce-in {
    0% {
        opacity: 0;
        transform: scale(0.3);
    }

    50% {
        transform: scale(1.05);
    }

    70% {
        transform: scale(0.9);
    }

    100% {
        opacity: 1;
        transform: scale(1);
    }
}

.p-4 {
    padding: 1rem;
}

.flex {
    display: flex;
}

.items-center {
    align-items: center;
}

.space-x-2>*:not([hidden])~*:not([hidden]) {
    margin-left: 0.5rem;
}

.h-5 {
    height: 1.25rem;
}

.w-5 {
    width: 1.25rem;
}

.text-primary {
    color: var(--primary-color);
}

.animate-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@keyframes pulse {

    0%,
    100% {
        opacity: 1;
    }

    50% {
        opacity: 0.5;
    }
}

.text-sm {
    font-size: 0.875rem;
}

.text-2xl {
    font-size: 1.5rem;
}

.animate-glow {
    animation: glow 2s ease-in-out infinite alternate;
}

@keyframes glow {
    from {
        box-shadow: 0 0 20px rgba(0, 204, 255, 0.3);
    }

    to {
        box-shadow: 0 0 30px rgba(0, 204, 255, 0.6), 0 0 40px rgba(0, 204, 255, 0.3);
    }
}

.text-orange-500 {
    color: #f97316;
}

.text-yellow-500 {
    color: #eab308;
}

.lg\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
}

.gap-8 {
    gap: 2rem;
}

.lg\:col-span-2 {
    grid-column: span 2 / span 2;
}

.neon-border {
    border: 1px solid var(--neon-border-color);
    box-shadow:
        0 0 10px var(--neon-shadow-color),
        inset 0 0 10px rgba(0, 204, 255, 0.1);
}

.card-header {
    padding: 1rem;
    border-bottom: 1px solid var(--border-color);
}

.justify-between {
    justify-content: space-between;
}

.btn-icon {
    background: none;
    border: none;
    color: var(--primary-color);
    font-size: 1.5rem;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 0.25rem;
    transition: background-color 0.2s;
}

.btn-icon:hover {
    background-color: rgba(0, 204, 255, 0.1);
}

.text-xl {
    font-size: 1.25rem;
}

.text-center {
    text-align: center;
}

.py-8 {
    padding-top: 2rem;
    padding-bottom: 2rem;
}

.text-4xl {
    font-size: 2.25rem;
}

.mb-4 {
    margin-bottom: 1rem;
}

.card-footer {
    padding: 1rem;
    border-top: 1px solid var(--border-color);
    align-items: center;
    justify-content: center;
    display: flex;
}

.btn-add-task {
    background: linear-gradient(to right, var(--primary-color), #007bff);
    color: white;
    padding: 0.75rem 1.5rem;
    border-radius: 0.5rem;
    border: none;
    cursor: pointer;
    font-size: 1rem;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
}

.btn-add-task:hover {
    opacity: 0.9;
    transform: translateY(-2px);
}

.btn-add-task .animate-spin {
    animation: spin 1s linear infinite;
}

@keyframes spin {
    from {
        transform: rotate(0deg);
    }

    to {
        transform: rotate(360deg);
    }
}

.space-y-6>*:not([hidden])~*:not([hidden]) {
    margin-top: 1.5rem;
}

.card-title {
    font-size: 1.25rem;
    font-weight: 700;
}

.justify-around {
    justify-content: space-around;
}

.text-center {
    text-align: center;
}

.mb-4 {
    margin-bottom: 1rem;
}

.text-xl {
    font-size: 1.25rem;
}

.task-card {
    background-color: rgba(255, 255, 255, 0.05);
    padding: 1rem;
    border-radius: 0.5rem;
    margin-bottom: 0.75rem;
    display: flex;
    align-items: center;
    cursor: pointer;
    transition: all 0.2s ease-in-out;
}

.task-card:hover {
    background-color: rgba(255, 255, 255, 0.1);
    transform: translateY(-2px);
}

.task-card.completed {
    opacity: 0.75;
    background-color: rgba(0, 204, 255, 0.1);
}

.task-card .icon-wrapper {
    padding: 0.5rem;
    border-radius: 9999px;
    margin-right: 0.75rem;
}

.task-card .icon-wrapper.bg-primary {
    background-color: var(--primary-color);
}

.task-card .icon-wrapper.bg-muted {
    background-color: var(--muted-foreground);
}

.task-card .flex-1 {
    flex: 1 1 0%;
}

.task-card h3 {
    font-weight: 500;
}

.task-card h3.line-through {
    text-decoration: line-through;
    color: var(--muted-foreground);
}

.task-card .badge {
    display: inline-flex;
    align-items: center;
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    font-size: 0.75rem;
    font-weight: 600;
}

.task-card .badge.default {
    background-color: var(--primary-color);
    color: white;
}

.task-card .badge.secondary {
    background-color: rgba(255, 255, 255, 0.1);
    color: var(--text-color);
}

.task-card .text-sm {
    font-size: 0.875rem;
}

.task-card .text-muted-foreground {
    color: var(--muted-foreground);
}

.task-card .text-primary {
    color: var(--primary-color);
}

.task-card .h-5 {
    height: 1.25rem;
}

.task-card .w-5 {
    width: 1.25rem;
}

/* Modal */
.modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
}

.modal.hidden {
    display: none;
}

.modal-content {
    background: var(--card-background);
    backdrop-filter: blur(20px);
    border: 1px solid var(--border-color);
    box-shadow:
        0 8px 32px var(--shadow-color),
        inset 0 1px 0 rgba(255, 255, 255, 0.1);
    border-radius: 0.75rem;
    padding: 1.5rem;
    width: 90%;
    max-width: 500px;
    position: relative;
}

.modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
}

.modal-title {
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--primary-color);
}

.modal-close-btn {
    background: none;
    border: none;
    color: var(--muted-foreground);
    font-size: 1.5rem;
    cursor: pointer;
    transition: color 0.2s;
}

.modal-close-btn:hover {
    color: var(--text-color);
}

.form-group {
    margin-bottom: 1rem;
}

.form-group label {
    display: block;
    margin-bottom: 0.5rem;
    font-size: 0.875rem;
    color: var(--muted-foreground);
}

.form-group input[type="text"],
.form-group input[type="time"],
.form-group select {
    width: 100%;
    padding: 0.75rem;
    border-radius: 0.5rem;
    border: 1px solid var(--border-color);
    background-color: rgba(255, 255, 255, 0.05);
    color: var(--text-color);
    font-size: 1rem;
    transition: border-color 0.2s, box-shadow 0.2s;
}

.form-group input[type="text"]:focus,
.form-group input[type="time"]:focus,
.form-group select:focus {
    border-color: var(--primary-color);
    box-shadow: 0 0 0 2px rgba(0, 204, 255, 0.3);
    outline: none;
}

.form-group select option {
    background-color: var(--background-end);
    color: var(--text-color);
}

.btn-create-task {
    background: linear-gradient(to right, var(--primary-color), #007bff);
    color: white;
    padding: 0.75rem 1.5rem;
    border-radius: 0.5rem;
    border: none;
    cursor: pointer;
    font-size: 1rem;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    width: 100%;
}

.btn-create-task:hover {
    opacity: 0.9;
    transform: translateY(-2px);
}

.badge-notification {
    position: fixed;
    top: 1rem;
    right: 1rem;
    background: linear-gradient(to right, var(--primary-color), #007bff);
    color: white;
    padding: 1rem;
    border-radius: 0.5rem;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
    z-index: 1000;
    display: flex;
    align-items: center;
    appearance: 0.5rem;
    animation: badge-unlock 0.8s ease-out;
}

@keyframes badge-unlock {
    0% {
        transform: scale(0) rotate(-180deg);
        opacity: 0;
    }

    50% {
        transform: scale(1.2) rotate(-90deg);
        opacity: 0.8;
    }

    100% {
        transform: scale(1) rotate(0deg);
        opacity: 1;
    }
}

.badge-notification .icon {
    font-size: 1.5rem;
}

.badge-notification .title {
    font-weight: 700;
}

.badge-notification .description {
    font-size: 0.875rem;
}

.task-complete-animation {
    animation: task-complete 0.6s ease-out;
}

@keyframes task-complete {
    0% {
        transform: scale(1);
    }

    50% {
        transform: scale(1.05);
        box-shadow: 0 0 20px rgba(0, 204, 255, 0.5);
    }

    100% {
        transform: scale(1);
    }
}

.flex-col {
    flex-direction: column;
}

.justify-center {
    justify-content: center;
}

.items-center {
    align-items: center;
}

.space-y-2>*:not([hidden])~*:not([hidden]) {
    margin-top: 0.5rem;
}

@media (min-width: 768px) {
    .md\:grid-cols-4 {
        grid-template-columns: repeat(4, minmax(0, 1fr));
    }
}

@media (min-width: 1024px) {
    .lg\:grid-cols-3 {
        grid-template-columns: repeat(3, minmax(0, 1fr));
    }

    .lg\:col-span-2 {
        grid-column: span 2 / span 2;
    }
}

/* Pequenos utilitários faltantes usados pelo script (não alteram visual) */
.p-3 { padding: 0.75rem; }
.space-x-3 > *:not([hidden]) ~ *:not([hidden]) { margin-left: 0.75rem; }

/* Ajustes para alinhar a lista de badges/conquistas */
#badges-list {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
}

#badges-list > div {
    display: flex;
    align-items: center;
    gap: 0.75rem; /* espaço entre ícone e texto */
    padding: 0.75rem;
    border-radius: 0.5rem;
}

/* garantir que título do badge e descrição fiquem alinhados verticalmente */
#badges-list h4, #badges-list p { margin: 0; }

/* Se houver um header no card de badges, mantê-lo alinhado e com espaçamento entre ícone e texto */
.card .card-body > .card-title {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 0.75rem; /* espaço entre elementos do título (ícone + texto + contador) */
}

/* Se o título incluir um ícone (ex: troféu), separar o ícone do texto */
.card .card-body > .card-title i {
    margin-right: 0.5rem;
    flex: 0 0 auto;
}

/* Também aplicar espaçamento caso o ícone seja SVG */
.card .card-body > .card-title svg {
    margin-right: 0.5rem;
    flex: 0 0 auto;
}

/* Se o ícone for um emoji no início do texto, usar ::first-letter para espaçar visualmente */
.card .card-body > .card-title::first-letter {
    display: inline-block;
    margin-right: 0.5rem;
}

/* Pequeno ajuste responsivo para evitar que o ícone quebre linha em telas pequenas */
#badges-list i { flex: 0 0 auto; }